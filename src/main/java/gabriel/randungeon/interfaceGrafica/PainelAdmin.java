//Aluno: Gabriel Antônio Esteves Matta
//Matrícula: 202065125A
package gabriel.randungeon.interfaceGrafica;

import gabriel.randungeon.Admin;
import gabriel.randungeon.Consumivel;
import gabriel.randungeon.Efeito;
import gabriel.randungeon.Equipavel;
import static gabriel.randungeon.Equipavel.ARMA;
import static gabriel.randungeon.Equipavel.ARMADURA;
import static gabriel.randungeon.Equipavel.BOTA;
import gabriel.randungeon.Leitor;
import static gabriel.randungeon.Leitor.MANTO;
import gabriel.randungeon.Monstro;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Gabriel
 */
public class PainelAdmin extends javax.swing.JFrame {

    MenuPrincipal frameBase;

    /**
     * Creates new form PainelAdmin
     */
    public PainelAdmin(MenuPrincipal frame) {
        initComponents();
        this.setSize(600, 600);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                int i = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja sair?", "Saída", JOptionPane.YES_NO_OPTION);
                if (i == JOptionPane.YES_OPTION) {
                    Leitor.gravaUsuarios();
                    Leitor.gravaPersonagens();
                    System.exit(0);
                } else {
                    repaint();
                }
            }
        });
        this.setVisible(true);
        this.frameBase = frame;
        this.frameBase.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMonstro = new javax.swing.JButton();
        addConsumivel = new javax.swing.JButton();
        addEquipavel = new javax.swing.JButton();
        addEfeito = new javax.swing.JButton();
        removeMonstro = new javax.swing.JButton();
        removeConsumivel = new javax.swing.JButton();
        removeEquipavel = new javax.swing.JButton();
        removeEfeito = new javax.swing.JButton();
        sair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(400, 400));

        addMonstro.setText("Adiciona Monstro");
        addMonstro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMonstroActionPerformed(evt);
            }
        });

        addConsumivel.setText("Adiciona Consumivel");
        addConsumivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addConsumivelActionPerformed(evt);
            }
        });

        addEquipavel.setText("Adiciona Equipavel");
        addEquipavel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEquipavelActionPerformed(evt);
            }
        });

        addEfeito.setText("Adiciona Efeito");
        addEfeito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addEfeitoActionPerformed(evt);
            }
        });

        removeMonstro.setText("Remove Monstro");
        removeMonstro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeMonstroActionPerformed(evt);
            }
        });

        removeConsumivel.setText("Remove Consumivel");
        removeConsumivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeConsumivelActionPerformed(evt);
            }
        });

        removeEquipavel.setText("Remove Equipavel");
        removeEquipavel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeEquipavelActionPerformed(evt);
            }
        });

        removeEfeito.setText("Remove Efeito");
        removeEfeito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeEfeitoActionPerformed(evt);
            }
        });

        sair.setText("Voltar");
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(83, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addConsumivel, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(addMonstro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addEquipavel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addEfeito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(removeMonstro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeConsumivel, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(removeEquipavel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(removeEfeito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(92, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sair, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMonstro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeMonstro, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addConsumivel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeConsumivel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addEquipavel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeEquipavel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addEfeito, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeEfeito, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(sair, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addMonstroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMonstroActionPerformed
        String nome = JOptionPane.showInputDialog(this, "Digite o nome do monstro:", "Adicionar Monstro",
                JOptionPane.QUESTION_MESSAGE);
        boolean x = false;
        int nivel = 0;
        do {
            String lvl = JOptionPane.showInputDialog(this, "Digite o nivel do monstro(valor inteiro de 1 a 5):", "Adicionar Monstro",
                    JOptionPane.QUESTION_MESSAGE);
            nivel = Integer.parseInt(lvl);
            if (nivel < 1 || nivel > 5) {
                JOptionPane.showMessageDialog(this, "Valor fora do intervalo esperado!");
            } else {
                x = true;
            }
        } while (!x);
        String power = JOptionPane.showInputDialog(this, "Digite o poder do monstro:", "Adicionar Monstro",
                JOptionPane.QUESTION_MESSAGE);
        int poder = Integer.parseInt(power);
        Admin.admin.adicionaMonstro(nome, nivel, poder);
        JOptionPane.showMessageDialog(this, "Monstro adicionado com sucesso!");
    }//GEN-LAST:event_addMonstroActionPerformed

    private void removeMonstroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeMonstroActionPerformed

        try {
            String nome = JOptionPane.showInputDialog(this, "Digite o nome do monstro a ser deletado:", "Remover Monstro",
                    JOptionPane.QUESTION_MESSAGE);
            Admin.admin.removeMonstro(Monstro.getMonstro(nome));
            JOptionPane.showMessageDialog(this, "Monstro removido com sucesso!");
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Nome inválido! Tente novamente!");
        }
    }//GEN-LAST:event_removeMonstroActionPerformed

    private void addConsumivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addConsumivelActionPerformed
        String nome = JOptionPane.showInputDialog(this, "Digite o nome do item:", "Adicionar Consumível",
                JOptionPane.QUESTION_MESSAGE);
        String power = JOptionPane.showInputDialog(this, "Digite o poder do item:", "Adicionar Consumível",
                JOptionPane.QUESTION_MESSAGE);
        int poder = Integer.parseInt(power);
        String valor = JOptionPane.showInputDialog(this, "Digite o valor do item:", "Adicionar Consumível",
                JOptionPane.QUESTION_MESSAGE);
        int val = Integer.parseInt(valor);
        Admin.admin.AdicionaConsumivel(nome, poder, val);
        JOptionPane.showMessageDialog(this, "Consumível adicionado com sucesso!");
    }//GEN-LAST:event_addConsumivelActionPerformed

    private void removeConsumivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeConsumivelActionPerformed

        String nome = JOptionPane.showInputDialog(this, "Digite o nome do consumível a ser deletado:", "Remover Consumível",
                JOptionPane.QUESTION_MESSAGE);
        boolean sucesso = false;
        for (Consumivel consumivel : Consumivel.getLista()) {
            int i = consumivel.getNome().indexOf('(');
            String x = consumivel.getNome().substring(0, i);
            if (x != null && nome != null) {
                if (x.equals("aaa")) {
                    Admin.admin.removeConsumivel(consumivel);
                    JOptionPane.showMessageDialog(this, "Consumível removido com sucesso!");
                    sucesso = true;
                    break;
                }
            }
        }
        if (!sucesso)
            JOptionPane.showMessageDialog(this, "Nome inválido! Tente novamente!");
    }//GEN-LAST:event_removeConsumivelActionPerformed

    private void addEquipavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEquipavelActionPerformed
        String nome = JOptionPane.showInputDialog(this, "Digite o nome do item:", "Adicionar Equipavel",
                JOptionPane.QUESTION_MESSAGE);
        String power = JOptionPane.showInputDialog(this, "Digite o poder do item:", "Adicionar Equipavel",
                JOptionPane.QUESTION_MESSAGE);
        int poder = Integer.parseInt(power);
        String valor = JOptionPane.showInputDialog(this, "Digite o valor do item:", "Adicionar Equipavel",
                JOptionPane.QUESTION_MESSAGE);
        int val = Integer.parseInt(valor);
        String tipo = JOptionPane.showInputDialog(this, "Digite o tipo do item (Arma, Armadura, Manto, Bota):", "Adicionar Equipavel",
                JOptionPane.QUESTION_MESSAGE);
        char t = ' ';
        if (tipo.equals("Arma") || tipo.equals("arma") || tipo.equals("ARMA")) {
            t = ARMA;
        } else if (tipo.equals("Armadura") || tipo.equals("armadura") || tipo.equals("ARMADURA")) {
            t = ARMADURA;
        } else if (tipo.equals("Manto") || tipo.equals("manto") || tipo.equals("MANTO")) {
            t = MANTO;
        } else if (tipo.equals("Bota") || tipo.equals("bota") || tipo.equals("BOTA")) {
            t = BOTA;
        }
        Admin.admin.adicionaEquipavel(nome, poder, val, t);
        JOptionPane.showMessageDialog(this, "Equipavel adicionado com sucesso!");
    }//GEN-LAST:event_addEquipavelActionPerformed

    private void removeEquipavelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeEquipavelActionPerformed

        String nome = JOptionPane.showInputDialog(this, "Digite o nome do equipavel a ser deletado:", "Remover Equipavel",
                JOptionPane.QUESTION_MESSAGE);
        boolean sucesso = false;
        for (Equipavel equipavel : Equipavel.getLista()) {
            int i = equipavel.getNome().indexOf('(');
            String x = equipavel.getNome().substring(0, i);
            if (x.equals(nome)) {
                Admin.admin.removeEquipavel(equipavel);
                JOptionPane.showMessageDialog(this, "Equipavel removido com sucesso!");
                sucesso = true;
                break;
            }
        }
        if(!sucesso)
            JOptionPane.showMessageDialog(this, "Nome inválido! Tente novamente!");
    }//GEN-LAST:event_removeEquipavelActionPerformed

    private void addEfeitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addEfeitoActionPerformed
        String nome = JOptionPane.showInputDialog(this, "Digite o nome do efeito:", "Adicionar Efeito",
                JOptionPane.QUESTION_MESSAGE);
        String power = JOptionPane.showInputDialog(this, "Digite o poder do efeito:", "Adicionar Efeito",
                JOptionPane.QUESTION_MESSAGE);
        int poder = Integer.parseInt(power);
        String duracao = JOptionPane.showInputDialog(this, "Digite a duração do efeito:", "Adicionar Efeito",
                JOptionPane.QUESTION_MESSAGE);
        int dur = Integer.parseInt(duracao);

        Admin.admin.adicionaEfeito(nome, poder, dur);
        JOptionPane.showMessageDialog(this, "Efeito adicionado com sucesso!");
    }//GEN-LAST:event_addEfeitoActionPerformed

    private void removeEfeitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeEfeitoActionPerformed
        try {
            String nome = JOptionPane.showInputDialog(this, "Digite o nome do efeito a ser deletado:", "Remover Efeito",
                    JOptionPane.QUESTION_MESSAGE);
            Admin.admin.removeEfeito(Efeito.getEfeito(nome));
            JOptionPane.showMessageDialog(this, "Efeito removido com sucesso!");
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Nome inválido! Tente novamente!");
        }
    }//GEN-LAST:event_removeEfeitoActionPerformed

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        this.frameBase.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_sairActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addConsumivel;
    private javax.swing.JButton addEfeito;
    private javax.swing.JButton addEquipavel;
    private javax.swing.JButton addMonstro;
    private javax.swing.JButton removeConsumivel;
    private javax.swing.JButton removeEfeito;
    private javax.swing.JButton removeEquipavel;
    private javax.swing.JButton removeMonstro;
    private javax.swing.JButton sair;
    // End of variables declaration//GEN-END:variables
}
