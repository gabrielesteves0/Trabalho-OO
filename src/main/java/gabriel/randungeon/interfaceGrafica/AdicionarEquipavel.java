//Aluno: Gabriel Antônio Esteves Matta
//Matrícula: 202065125A

package gabriel.randungeon.interfaceGrafica;

import gabriel.randungeon.Equipavel;
import gabriel.randungeon.Personagem;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Gabriel
 */
public class AdicionarEquipavel extends javax.swing.JPanel {

    public static final char ARMA = 'w';
    public static final char ARMADURA = 'a';
    public static final char BOTA = 'x';
    public static final char MANTO = 'm';
    private Personagem personagem;
    
    private TelaAddEquipavel frameBase;

    /**
     * Creates new form AdicionarEquipavel
     */
    public AdicionarEquipavel(Personagem personagem, Equipavel equipado, TelaAddEquipavel frame) {
        initComponents();
        this.frameBase = frame;
        this.personagem = personagem;
        this.repaint();
        try {
            jLabel2.setText("Equipado: " + getEquipado().getNome());
            jLabel2.update(jLabel2.getGraphics());
        } catch (NullPointerException ex) {
            jLabel2.setText("Nada equipado!");
        }
    }

//   protected void resetaLabel() {
//        if (MenuPrincipal.tipoBotaoClicado == ARMA && personagem.getArma() != null) {
//            this.jLabel2.setText("Arma equipada: " + personagem.getArma().getNome() + " | Poder: " + personagem.getArma().getPoder());
//        } else if (MenuPrincipal.tipoBotaoClicado == ARMADURA && personagem.getArmadura() != null) {
//            this.jLabel2.setText("Armadura equipada: " + personagem.getArmadura().getNome() + " | Poder: " + personagem.getArmadura().getPoder());
//        } else if (MenuPrincipal.tipoBotaoClicado == MANTO && personagem.getManto() != null) {
//            this.jLabel2.setText("Manto equipado: " + personagem.getManto().getNome() + " | Poder: " + personagem.getManto().getPoder());
//        } else if (MenuPrincipal.tipoBotaoClicado == BOTA && personagem.getBota() != null) {
//            this.jLabel2.setText("Bota equipada: " + personagem.getBota().getNome() + " | Poder: " + personagem.getBota().getPoder());
//        }else
//            this.jLabel2.setText("Nada equipado!");
//    }
    private Equipavel getEquipado() throws NullPointerException {
        switch (EntreSalas.tipoBotaoClicado) {
            case ARMA:
                return personagem.getArma();
            case ARMADURA:
                return personagem.getArmadura();
            case MANTO:
                return personagem.getManto();
            default:
                return personagem.getBota();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listaEquipaveis = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        botaoEquipar = new javax.swing.JButton();
        botaoVoltar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(500, 500));
        setPreferredSize(new java.awt.Dimension(400, 400));

        listaEquipaveis.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaEquipaveis.setLayoutOrientation(javax.swing.JList.VERTICAL_WRAP);
        jScrollPane1.setViewportView(listaEquipaveis);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Lista de Equipaveis na mochila");

        botaoEquipar.setText("Equipar");
        botaoEquipar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoEquiparActionPerformed(evt);
            }
        });

        botaoVoltar.setText("Voltar");
        botaoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarActionPerformed(evt);
            }
        });

        jLabel2.setText(null);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(botaoEquipar)
                .addGap(18, 18, 18)
                .addComponent(botaoVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel1)
                .addContainerGap(109, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoVoltar)
                    .addComponent(botaoEquipar))
                .addContainerGap(231, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void botaoEquiparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoEquiparActionPerformed

        try {
            DefaultListModel<String> modeloLista = (DefaultListModel<String>) listaEquipaveis.getModel();

            if (Equipavel.getEquipavel(listaEquipaveis.getSelectedValue()).getTipo() == EntreSalas.tipoBotaoClicado) {
                if (getEquipado() != null) {
                    modeloLista.addElement(getEquipado().getNome());
                }
                personagem.setEquip(Equipavel.getEquipavel(listaEquipaveis.getSelectedValue()));
                Equipavel.getEquipavel(listaEquipaveis.getSelectedValue()).equipa();
                Equipavel equipado = getEquipado();
                equipado = Equipavel.getEquipavel(listaEquipaveis.getSelectedValue());
                modeloLista.remove(listaEquipaveis.getSelectedIndex());
                listaEquipaveis.setModel(modeloLista);
                JOptionPane.showMessageDialog(this, "Item equipado com sucesso!");
                try {
                    jLabel2.setText("Equipado: " + getEquipado().getNome());
                    jLabel2.update(jLabel2.getGraphics());
                } catch (NullPointerException ex) {
                    jLabel2.setText("Nada equipado!");
                    jLabel2.update(jLabel2.getGraphics());
                }
            } else {
                JOptionPane.showMessageDialog(this, "Item selecionado não é do tipo desejado!");
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Por favor, selecione um item válido da lista!");
        }
    }//GEN-LAST:event_botaoEquiparActionPerformed

    private void atualizaLabel(JLabel label, Equipavel equipavel) {
        try {
            label.setText("Equipado: " + equipavel.getNome());
            label.update(label.getGraphics());
        } catch (NullPointerException ex) {
            label.setText("Nada equipado!");
            label.update(label.getGraphics());
        }
    }

    private void botaoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVoltarActionPerformed
        atualizaLabel(EntreSalas.armaEquipada, personagem.getArma());
        atualizaLabel(EntreSalas.armaduraEquipada, personagem.getArmadura());
        atualizaLabel(EntreSalas.mantoEquipado, personagem.getManto());
        atualizaLabel(EntreSalas.botaEquipada, personagem.getBota());
        this.frameBase.setVisible(false);
        this.frameBase.getFrameBase().setVisible(true);
        this.frameBase.dispose();
    }//GEN-LAST:event_botaoVoltarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botaoEquipar;
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JLabel jLabel1;
    protected javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JList<String> listaEquipaveis;
    // End of variables declaration//GEN-END:variables
}
